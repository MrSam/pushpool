{
	# network ports
	"listen" : [
		# binary protocol (default), port 8336
		{ "port" : 8336 },

		# HTTP JSON-RPC protocol, port 8337
		{ "port" : 8337, "protocol" : "http-json" },

		# HTTP JSON-RPC protocol, port 8339,
		# with trusted proxy appserver.example.com forwarding
		# requests to us
		#
		# comment out if not using multiple servers
		{ "port" : 8337, "protocol" : "http-json",
		  "proxy" : "appserver.example.com" },

		# binary protocol, localhost-only port 8338
		{ "host" : "127.0.0.1", "port" : 8338, "protocol" : "binary" }
	],

	# database settings
	"database" : {

		##
		# select one database engine and remove the other ones.
		##
		
		"engine" : "sqlite3",
		"name" : "/tmp/data.sqlite",

		# set to true to enable logging of shares to db
		"sharelog" : true,

		# edit queries to match your database structure if necessary
		"stmt.pwdb" :
		  "SELECT password FROM pool_worker WHERE username = ?",
		
                "stmt.sharelog" :
                  "INSERT INTO shares (time, rem_host, username, our_result, upstream_result, reason, solution) VALUES (?,?,?,?,?,?,?)"

		# ... or ...

		"engine" : "mysql",

		# 'host' defaults to localhost, if not specified
		"host" : "mysql.example.com",

		# 'port' uses proper default port for the DB engine,
		# if not specified
		"port" : 3306,

		"name" : "mydatabasename",
		"username" : "myuser",
		"password" : "mypass",

		# set to true to enable logging of shares to db
		"sharelog" : true,

		# edit queries to match your database structure if necessary
		"stmt.pwdb" :
		  "SELECT password FROM pool_worker WHERE username = ?",

      		"stmt.sharelog":
		   "INSERT INTO shares (time,rem_host, username, our_result, upstream_result, reason, solution) VALUES (UNIX_TIMESTAMP(NOW()),?, ?, ?, ?, ?, ?)"


		# ... or ...

		"engine" : "postgresql",

		"host" : "db.example.com",

		"port" : 5432,

		"name" : "mydatabasename",
		"username" : "myuser",
		"password" : "mypass",

		# set to true to enable logging of shares to db
		"sharelog" : true,

		# edit queries to match your database structure if necessary
		"stmt.pwdb" :
		  "SELECT password FROM pool_worker WHERE username = $1",
		
                "stmt.sharelog" :
                  "INSERT INTO shares (rem_host, username, our_result, upstream_result, reason, solution) VALUES ($1, $2, $3, $4, $5, decode($6, 'hex'))"

	},

	# cache settings
	# comment out to disable memcache - NOT RECOMMENDED
	"memcached" : {
		"servers" : [
			{ "host" : "127.0.0.1", "port" : 11211 }
		]
	},

	"pid" : "/tmp/pushpoold.pid",

	# overrides local hostname detection
	"forcehost" : "localhost.localdomain",

	# logfiles for requests and shares
	"log.requests" : "/tmp/request.log",
	"log.shares" : "/tmp/shares.log",

	# the server assumes longpolling (w/ SIGUSR1 called for each blk)
	"longpoll.disable" : false,

	# length of time to cache username/password credentials, in seconds
	"auth.cred_cache.expire" : 75,

	# RPC settings to bitcoind upstream server (same as bitcoin.conf if using original client)
	"rpc.url" : "http://127.0.0.1:8332/",
	"rpc.user" : "myusername",
	"rpc.pass" : "mypassword",

	# rewrite returned 'target' to difficulty-1?
	"rpc.target.rewrite" : true
}
